import{A as m,ad as _,aa as f,r as n,ae as h,R as x,c as y,o as E,x as g,s as C,a0 as M,E as e,J as b,a7 as k,a9 as w,_ as B}from"./Byy7DssC.js";import"./0G87Z3fP.js";import{u as D}from"./DRGnUx05.js";import{u as P}from"./BkNyRhbZ.js";import{F as S}from"./4nZ6uPeE.js";import{m as V}from"./BYqK6xny.js";import"./D648tDZT.js";import"./BmtBwevS.js";import"./CYtLaobC.js";const W=["src"],I=m({__name:"VideoElement",props:{node:{}},setup(A){const l=_(),c=k(),t=D(),d=P(),i=f("video"),s=n(null),r=n(!1),o=n(!1);return t.autoplay.value||(r.value=!0,o.value=!0),h(()=>{if(!i.value)return;const a=i.value,u={rootMargin:"0px 0px 75px 0px",threshold:0};s.value=new IntersectionObserver(p=>{const v=p[0];try{v.isIntersecting?(r.value=!0,o.value||a.play()):(r.value?o.value=a.paused:o.value=!1,a.pause())}catch{}},u),s.value.observe(a)}),x(()=>{s.value&&s.value.disconnect()}),(a,u)=>(E(),y(S,{caption:e(t).caption},{default:g(()=>[C("video",{ref:"video",src:e(c)(e(w)(e(d).resolvedSrc)),preload:"metadata",loop:"",muted:"",controls:"",class:b({[e(l).video]:!0,[e(l)[`invert-${e(t).invert}`]]:!!e(t).invert}),style:M({maxWidth:e(V)(e(t).maxWidth)})},null,14,W)]),_:1},8,["caption"]))}}),R="_video_1e73l_1",U={video:R,"invert-light":"_invert-light_1e73l_4","invert-dark":"_invert-dark_1e73l_10"},z={$style:U},H=B(I,[["__cssModules",z]]);export{H as default};
