import{z as m,ah as _,aa as f,ae as h,Z as n,ai as x,Q as y,c as g,o as C,v as D,r as E,a0 as M,D as e,H as b,ad as k,_ as w}from"./B8j-voU8.js";import"./cCl500a7.js";import{u as B}from"./LAlT3Xht.js";import{u as P}from"./CK0yR6v1.js";import{F as S}from"./aIVspNiu.js";import{m as V}from"./BYqK6xny.js";import"./D7QIlIeF.js";import"./BihgogmZ.js";import"./CTZs3P5p.js";const W=["src"],z=m({__name:"VideoElement",props:{node:{}},setup(R){const l=_(),c=f(),t=B(),d=P(),i=h("video"),s=n(null),r=n(!1),o=n(!1);return t.autoplay.value||(r.value=!0,o.value=!0),x(()=>{if(!i.value)return;const a=i.value,u={rootMargin:"0px 0px 75px 0px",threshold:0};s.value=new IntersectionObserver(p=>{const v=p[0];try{v.isIntersecting?(r.value=!0,o.value||a.play()):(r.value?o.value=a.paused:o.value=!1,a.pause())}catch{}},u),s.value.observe(a)}),y(()=>{s.value&&s.value.disconnect()}),(a,u)=>(C(),g(S,{caption:e(t).caption},{default:D(()=>[E("video",{ref:"video",src:e(c)(e(k)(e(d).resolvedSrc)),preload:"metadata",loop:"",muted:"",controls:"",class:b({[e(l).video]:!0,[e(l)[`invert-${e(t).invert}`]]:!!e(t).invert}),style:M({maxWidth:e(V)(e(t).maxWidth)})},null,14,W)]),_:1},8,["caption"]))}}),I="_video_1e73l_1",U={video:I,"invert-light":"_invert-light_1e73l_4","invert-dark":"_invert-dark_1e73l_10"},F={$style:U},q=w(z,[["__cssModules",F]]);export{q as default};
