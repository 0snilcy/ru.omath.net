import{j as m,a4 as _,a0 as f,r as n,a5 as h,K as x,f as y,o as g,w,a as C,a3 as D,n as e,D as E,Z as M,$ as b,_ as k}from"./DfFD7B6f.js";import"./_nDpn-H_.js";import{u as B}from"./DKPPN35-.js";import{u as P}from"./Cm8b-rLV.js";import{F as S}from"./C4pncw-F.js";import{m as V}from"./BYqK6xny.js";import"./C9VXR75M.js";import"./Bz_vgPCe.js";import"./QsZ3h9lK.js";const W=["src"],I=m({__name:"VideoElement",props:{node:{}},setup(F){const l=_(),c=M(),t=B(),d=P(),i=f("video"),a=n(null),r=n(!1),o=n(!1);return t.autoplay.value||(r.value=!0,o.value=!0),h(()=>{if(!i.value)return;const s=i.value,u={rootMargin:"0px 0px 75px 0px",threshold:0};a.value=new IntersectionObserver(p=>{const v=p[0];try{v.isIntersecting?(r.value=!0,o.value||s.play()):(r.value?o.value=s.paused:o.value=!1,s.pause())}catch{}},u),a.value.observe(s)}),x(()=>{a.value&&a.value.disconnect()}),(s,u)=>(g(),y(S,{caption:e(t).caption},{default:w(()=>[C("video",{ref:"video",src:e(c)(e(b)(e(d).resolvedSrc)),preload:"metadata",loop:"",muted:"",controls:"",class:E({[e(l).video]:!0,[e(l)[`invert-${e(t).invert}`]]:!!e(t).invert}),style:D({maxWidth:e(V)(e(t).maxWidth)})},null,14,W)]),_:1},8,["caption"]))}}),U="_video_1e73l_1",$={video:U,"invert-light":"_invert-light_1e73l_4","invert-dark":"_invert-dark_1e73l_10"},z={$style:$},G=k(I,[["__cssModules",z]]);export{G as default};
