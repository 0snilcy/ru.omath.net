import{x as m,a7 as _,a3 as f,r as n,a8 as h,M as x,a as y,o as M,q as g,l as B,a6 as C,B as e,G as E,a0 as b,a2 as k,_ as w}from"./DmPrUm6p.js";import"./Bpezj_Vc.js";import{u as D}from"./DLmU5DEA.js";import{u as P}from"./Bz0X-eBa.js";import{F as S}from"./BW5jy0Pk.js";import{m as V}from"./BYqK6xny.js";import"./CEpdXMSQ.js";import"./CQuZdAu6.js";import"./IR43agsc.js";const W=["src"],I=m({__name:"VideoElement",props:{node:{}},setup(R){const l=_(),c=b(),t=D(),d=P(),i=f("video"),s=n(null),r=n(!1),o=n(!1);return t.autoplay.value||(r.value=!0,o.value=!0),h(()=>{if(!i.value)return;const a=i.value,u={rootMargin:"0px 0px 75px 0px",threshold:0};s.value=new IntersectionObserver(p=>{const v=p[0];try{v.isIntersecting?(r.value=!0,o.value||a.play()):(r.value?o.value=a.paused:o.value=!1,a.pause())}catch{}},u),s.value.observe(a)}),x(()=>{s.value&&s.value.disconnect()}),(a,u)=>(M(),y(S,{caption:e(t).caption},{default:g(()=>[B("video",{ref:"video",src:e(c)(e(k)(e(d).resolvedSrc)),preload:"metadata",loop:"",muted:"",controls:"",class:E({[e(l).video]:!0,[e(l)[`invert-${e(t).invert}`]]:!!e(t).invert}),style:C({maxWidth:e(V)(e(t).maxWidth)})},null,14,W)]),_:1},8,["caption"]))}}),U="_video_1e73l_1",z={video:U,"invert-light":"_invert-light_1e73l_4","invert-dark":"_invert-dark_1e73l_10"},F={$style:z},J=w(I,[["__cssModules",F]]);export{J as default};
