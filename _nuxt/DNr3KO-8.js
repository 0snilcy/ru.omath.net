import{x as m,a5 as _,a1 as f,r as n,a6 as h,L as x,f as y,o as E,w as g,a as w,a4 as B,B as e,E as C,$ as M,a0 as b,_ as k}from"./CYerhEto.js";import"./HqulojU4.js";import{u as D}from"./Bu6VOxOr.js";import{u as P}from"./hiQeQTo3.js";import{F as S}from"./DfIpDlTP.js";import{m as V}from"./BYqK6xny.js";import"./DSKiM4rJ.js";import"./Bse4WkgL.js";import"./BU9HGp7G.js";const W=["src"],I=m({__name:"VideoElement",props:{node:{}},setup(F){const l=_(),c=M(),t=D(),d=P(),i=f("video"),s=n(null),r=n(!1),o=n(!1);return t.autoplay.value||(r.value=!0,o.value=!0),h(()=>{if(!i.value)return;const a=i.value,u={rootMargin:"0px 0px 75px 0px",threshold:0};s.value=new IntersectionObserver(p=>{const v=p[0];try{v.isIntersecting?(r.value=!0,o.value||a.play()):(r.value?o.value=a.paused:o.value=!1,a.pause())}catch{}},u),s.value.observe(a)}),x(()=>{s.value&&s.value.disconnect()}),(a,u)=>(E(),y(S,{caption:e(t).caption},{default:g(()=>[w("video",{ref:"video",src:e(c)(e(b)(e(d).resolvedSrc)),preload:"metadata",loop:"",muted:"",controls:"",class:C({[e(l).video]:!0,[e(l)[`invert-${e(t).invert}`]]:!!e(t).invert}),style:B({maxWidth:e(V)(e(t).maxWidth)})},null,14,W)]),_:1},8,["caption"]))}}),U="_video_1e73l_1",$={video:U,"invert-light":"_invert-light_1e73l_4","invert-dark":"_invert-dark_1e73l_10"},z={$style:$},H=k(I,[["__cssModules",z]]);export{H as default};
