import{A as m,ai as _,ab as f,af as h,$ as n,aj as x,R as y,c as E,o as b,x as g,r as C,a1 as M,E as e,I as k,ae as w,_ as B}from"./ma-yzDba.js";import"./DiOTqd5X.js";import{u as D}from"./DyZc2_AK.js";import{u as I}from"./Breix-mE.js";import{F as P}from"./D7AKKRwi.js";import{m as S}from"./BYqK6xny.js";import"./Bcd_QwTy.js";import"./D-MePJoR.js";import"./RGhjTnN3.js";const V=["src"],W=m({__name:"VideoElement",props:{node:{}},setup(z){const l=_(),c=f(),t=D(),d=I(),i=h("video"),s=n(null),r=n(!1),o=n(!1);return t.autoplay.value||(r.value=!0,o.value=!0),x(()=>{if(!i.value)return;const a=i.value,u={rootMargin:"0px 0px 75px 0px",threshold:0};s.value=new IntersectionObserver(p=>{const v=p[0];try{v.isIntersecting?(r.value=!0,o.value||a.play()):(r.value?o.value=a.paused:o.value=!1,a.pause())}catch{}},u),s.value.observe(a)}),y(()=>{s.value&&s.value.disconnect()}),(a,u)=>(b(),E(P,{caption:e(t).caption},{default:g(()=>[C("video",{ref:"video",src:e(c)(e(w)(e(d).resolvedSrc)),preload:"metadata",loop:"",muted:"",controls:"",class:k({[e(l).video]:!0,[e(l)[`invert-${e(t).invert}`]]:!!e(t).invert}),style:M({maxWidth:e(S)(e(t).maxWidth)})},null,14,V)]),_:1},8,["caption"]))}}),R="_video_1e73l_1",U={video:R,"invert-light":"_invert-light_1e73l_4","invert-dark":"_invert-dark_1e73l_10"},$={$style:U},J=B(W,[["__cssModules",$]]);export{J as default};
