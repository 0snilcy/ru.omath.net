import{b1 as u}from"./CArnVfK8.js";async function m(t,e){const i=(await u(async()=>{const{default:r}=await import("./CfZphoad.js");return{default:r}},[],import.meta.url)).default,s=(await u(async()=>{const{default:r}=await import("./DTaisgrZ.js");return{default:r}},[],import.meta.url)).default;return i.renderToString(t,{displayMode:e==="block",strict:!1,macros:s})}function p(t){if(t=t.trim(),!t)throw new Error("Math expression is empty!")}async function d(t,e=i=>i){if(!t.includes(">>")){const g=t.trim();return{gap:"normal",parts:[await e(g)]}}const i=/>>(?:\{([^}]+)\})?/g;let s,n;for(;(s=i.exec(t))!==null;)n=s;const r=n[1]||"normal",c=n.index,f=n[0].length,l=t.substring(0,c),h=t.substring(c+f),o=[],a=l.includes(">>")?await d(l,e):await e(l.trim());typeof a=="object"&&a!==null&&"gap"in a&&a.gap===r?o.push(...a.parts):o.push(a);const _=h.trim();return o.push(await e(_)),{gap:r,parts:o}}async function b(t){return p(t),d(t,e=>m(e,"block"))}function y(t){if(!t)return;const e=(()=>{if(/[\^\\{}_]/gm.test(t))return!1;const s=new RegExp("(\\p{L}+)|([^\\p{L}]+)","gu"),n=[];let r;for(;(r=s.exec(t))!==null;)r[1]?n.push({type:"word",value:r[1]}):r[2]&&n.push({type:"other",value:r[2]});return n})();if(e)return{type:"string",tokens:e}}async function k(t){p(t);const e=y(t);return e||{type:"katex",html:await m(t,"inline")}}export{k as a,b as r};
